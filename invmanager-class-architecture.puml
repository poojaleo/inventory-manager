@startuml
interface RequestHandler {
O handleRequest(I input, Context context)
}

class Company {
- @DynamoDBHashKey companyName : String
- createdAt : String
- emailAddress : String
- password : String
+ {static} Builder builder()
}

class CreateCompanyActivity {
- companyDao : CompanyDao
- companyModelConverter : CompanyModelConverter
+ CreateCompanyResponse handleRequest(CreateCompanyRequest,Context)
}

class CreateCompanyRequest {
- companyName : String
- emailAddress : String
- password : String
+ {static} Builder builder()
}

class GetCompanyActivity {
- companyDao : CompanyDao
- companyModelConverter : CompanyModelConverter
+ GetCompanyResponse handleRequest(GetCompanyRequest,Context
}

class GetCompanyRequest {
- companyName : String
- password : String
+ {static} Builder builder()
}

class CompanyDao {
- mapper : DynamoDBMapper
+ Company getCompany(String)
+ Company saveCompany(Company)
}

class ProductDao {
- mapper : DynamoDBMapper
+ Product getActiveProduct(String,String)
+ Product getInActiveProduct(String,String)
+ Product getProductActiveAndInactive(String,String)
+ List<Product> getAllActiveProducts(String)
+ List<Product> getAllInactiveProducts(String)
- List<Product> getAllProducts(String,String)
+ Product saveProduct(Product)
}

class Product {
- @DynamoDBHashKey companyName : String
- @DynamoDBRange sku : String
- name : String
- description : String
- quantity : int
- cost : BigDecimal
- isActive : boolean
- deleteComment : String
+ {static} Builder builder()
}

class CreateProductActivity {
- productDao : ProductDao
- productModelConverter : ProductModelConverter
+ CreateProductResponse handleRequest(CreateProductRequest,Context)
}

class CreateProductRequest {
- companyName : String
- sku : String
- name : String
- description : String
- quantity : int
- cost : BigDecimal
+ {static} Builder builder()
}

class GetProductActivity {
- productDao : ProductDao
- productModelConverter : ProductModelConverter
+ GetProductResponse handleRequest(GetProductRequest,Context)
}

class GetProductRequest {
- companyName : String
- sku : String
+ {static} Builder builder()
}

class GetAllActiveProductsActivity {
- productDao : ProductDao
- productModelConverter : ProductModelConverter
+ GetAllActiveProductResponse handleRequest(GetAllActiveProductRequest,Context)
}

class GetAllActiveProductRequest {
- companyName : String
+ {static} Builder builder()
}

class GetAllInactiveProductsActivity {
- productDao : ProductDao
- productModelConverter : ProductModelConverter
+ GetAllInactiveProductResponse handleRequest(GetAllInactiveProductRequest,Context)
}

class GetAllInactiveProductRequest {
- companyName : String
+ {static} Builder builder()
}

class UpdateProductActivity {
- productDao : ProductDao
- productModelConverter : ProductModelConverter
+ UpdateProductResponse handleRequest(UpdateProductRequest,Context)
}

class UpdateProductRequest {
- companyName : String
- sku : String
- name : String
- description : String
- quantity : int
- cost : BigDecimal
+ {static} Builder builder()
}

class DeleteProductRequest {
- companyName : String
- sku : String
- deleteComments : String
+ {static} Builder builder()
}

class DeleteProductActivity {
- productDao : ProductDao
- productModelConverter : ProductModelConverter
+ DeleteProductResponse handleRequest(DeleteProductRequest,Context)
}

class UndeleteProductActivity {
- productDao : ProductDao
- productModelConverter : ProductModelConverter
+ UndeleteProductResponse handleRequest(UndeleteProductRequest,Context)
}


class UndeleteProductRequest {
- companyName : String
- sku : String
+ {static} Builder builder()
}

RequestHandler <|.. CreateCompanyActivity
RequestHandler <|.. GetCompanyActivity
RequestHandler <|.. CreateProductActivity
RequestHandler <|.. GetProductActivity
RequestHandler <|.. GetAllActiveProductsActivity
RequestHandler <|.. GetAllInactiveProductsActivity
RequestHandler <|.. UpdateProductActivity
RequestHandler <|.. DeleteProductActivity
RequestHandler <|.. UndeleteProductActivity
CreateCompanyActivity *-- CompanyDao
CreateCompanyActivity *-- CreateCompanyRequest
GetCompanyActivity *-- GetCompanyRequest
CompanyDao *-- Company
GetCompanyActivity *-- CompanyDao
CreateProductActivity *-- ProductDao
CreateProductActivity *-- CreateProductRequest
GetProductActivity *-- ProductDao
GetProductActivity *-- GetProductRequest
GetAllActiveProductsActivity *-- ProductDao
GetAllActiveProductsActivity *-- GetAllActiveProductRequest
GetAllInactiveProductsActivity *-- ProductDao
GetAllInactiveProductsActivity *-- GetAllInactiveProductRequest
UpdateProductActivity *-- ProductDao
UpdateProductActivity *-- UpdateProductRequest
DeleteProductActivity *-- ProductDao
DeleteProductActivity *-- DeleteProductRequest
UndeleteProductActivity *-- ProductDao
UndeleteProductActivity *-- UndeleteProductRequest
ProductDao *-- Product
newpage

Title: Responses

class CompanyModel {
- companyName : String
- createdAt : String
- emailAddress : String
+ {static} Builder builder()
}

class CreateCompanyResponse {
- companyModel : CompanyModel
+ {static} Builder builder()
}

class GetCompanyResponse {
- companyModel : CompanyModel
+ {static} Builder builder()
}

class ProductModel {
- companyName : String
- sku : String
- name : String
- description : String
- quantity : int
- cost : BigDecimal
- isActive : boolean
- deleteComment : String
+ {static} Builder builder()
}

class CreateProductResponse {
- productModel : ProductModel
+ {static} Builder builder()
}

class GetProductResponse {
- productModel : ProductModel
+ {static} Builder builder()
}

class GetAllActiveProductResponse {
- activeProductsList : List<ProductModel>
+ {static} Builder builder()
}

class GetAllInactiveProductResponse {
- inactiveProductsList : List<ProductModel>
+ {static} Builder builder()
}

class UpdateProductResponse {
- productModel : ProductModel
+ {static} Builder builder()
}

class DeleteProductResponse {
- productModel : ProductModel
+ {static} Builder builder()
}

class UndeleteProductResponse {
- productModel : ProductModel
+ {static} Builder builder()
}

CreateCompanyResponse *-- CompanyModel
GetCompanyResponse *-- CompanyModel
CreateProductResponse *-- ProductModel
GetProductResponse *-- ProductModel
GetAllActiveProductResponse *-- ProductModel
GetAllInactiveProductResponse *-- ProductModel
UpdateProductResponse *-- ProductModel
DeleteProductResponse *-- ProductModel
UndeleteProductResponse *-- ProductModel
@enduml